package com.bran.firebasedemo;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.net.Uri;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.squareup.picasso.Picasso;

import java.util.ArrayList;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.RecyclerView;

public class DealsAdapter extends RecyclerView.Adapter<DealsAdapter.DealHolder> {

    private ArrayList<TravelDeal> travelDeals;
    private FirebaseDatabase firebaseDatabase;
    private DatabaseReference dbRef;
    private ChildEventListener childEventListener;
    private AppCompatActivity parent;

    DealsAdapter(AppCompatActivity compatAct) {
        parent = compatAct; // Sets the Delivery
        FirebaseUtil.openFirebasePath(parent,"traveldeals");
        firebaseDatabase = FirebaseUtil.firebaseDatabase;
        dbRef = FirebaseUtil.databaseReference;

        travelDeals = FirebaseUtil.deals; // This is now equals to new ArrayList<TravelDeals>

        childEventListener = new ChildEventListener() {
            @Override
            public void onChildAdded(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {
                TravelDeal deal = dataSnapshot.getValue(TravelDeal.class); // Automatically serialize the Class object with the Data retrieved from Firebase
                deal.setId(dataSnapshot.getKey()); // Set the Id of the Object to the Id generated by Firebase
                travelDeals.add(deal);

                notifyItemInserted(travelDeals.size() - 1); // This will notify the App Service that the Item hss been inserted so that the user interface will be updated
            }

            @Override
            public void onChildChanged(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

            }

            @Override
            public void onChildRemoved(@NonNull DataSnapshot dataSnapshot) {

            }

            @Override
            public void onChildMoved(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        };
        dbRef.addChildEventListener(childEventListener);
    }

    @NonNull
    @Override
    public DealHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        Context context = parent.getContext();
        View itemView = LayoutInflater.from(context)
                .inflate(R.layout.deal_recycler, parent, false);
        return new DealHolder(itemView);
    }

    @Override
    public void onBindViewHolder(@NonNull DealHolder holder, int position) {
        TravelDeal deal = travelDeals.get(position);
        holder.bind(deal);
    }

    @Override
    public int getItemCount() {
        return travelDeals.size();
    }

    public class DealHolder extends RecyclerView.ViewHolder
        implements View.OnClickListener { // This class is used to describe how we bind the data to a single row
        TextView dealTitle, dealPrice, dealDescription;
        ImageView dealImage;

        public DealHolder(@NonNull View itemView) {
            super(itemView);

            dealTitle = itemView.findViewById(R.id.deal_title);
            dealPrice = itemView.findViewById(R.id.deal_price);
            dealDescription = itemView.findViewById(R.id.deal_description);
            dealImage = itemView.findViewById(R.id.dealImage);
            itemView.setOnClickListener(this);
        }

        public void bind(TravelDeal deal){
            dealTitle.setText(deal.getTitle());
            dealPrice.setText(deal.getPrice());
            dealDescription.setText(deal.getDescription());

            if (deal.getImageUrl() != null) {
                Uri imgUri = Uri.parse(deal.getImageUrl());
                int width = Resources.getSystem().getDisplayMetrics().widthPixels;

                Picasso.with(parent)
                        .load(imgUri)
//                        .resize(width, width * 2/3)
//                        .centerCrop()
                        .into(dealImage);
            }
        }

        @Override
        public void onClick(View v) {
            int position = getAdapterPosition();
            Log.i("Click", String.valueOf(position));
            TravelDeal selectedDeal = travelDeals.get(position);
            Intent startEditActivity = new Intent(itemView.getContext(), MainActivity.class);
            startEditActivity.putExtra("deal", selectedDeal);
            itemView.getContext().startActivity(startEditActivity);
        }
    }
}
